name: Run checks

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'genshin/**.py'
      - 'noxfile.py'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/checks.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'genshin/**.py'
      - 'noxfile.py'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/checks.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: lint
        run: |
          uv run nox -s lint

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/test'))

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run tests
        env:
          GENSHIN_COOKIES: ${{ secrets.GENSHIN_COOKIES }}
          HONKAI_COOKIES: ${{ secrets.HONKAI_COOKIES }}
          LOCAL_GENSHIN_COOKIES: ${{ matrix.python-version == '3.10' && secrets.LOCAL_GENSHIN_COOKIES || '' }}
          HSR_COOKIES: ${{ secrets.HSR_COOKIES }}
          ZZZ_COOKIES: ${{ secrets.ZZZ_COOKIES }}

        run: |
          uv run nox -s test --verbose -- --cov-append
          mv .coverage .coverage.${{ matrix.python-version }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true

  upload-coverage:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Generate lcov report
        run: |
          uv venv
          uv pip install coverage
          uv run coverage combine
          uv run coverage lcov -o lcov.info

      - name: Upload coverage to qlty cloud
        uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: lcov.info

  type-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run type checker
        run: |
          uv run nox -s type-check

  verify-types:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run type checker
        run: |
          uv run nox -s verify-types

  prettier:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Run prettier
        run: |
          npx prettier --check *.md docs/*.md *.yml
